# 分表配置
# 数据源名称，多数据源以逗号分隔
spring.shardingsphere.datasource.names=ds1
# 数据库连接池类名称
spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
# 数据库驱动类名
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
# 数据库 url 连接
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3306/order_db_1?serverTimezone=GMT%2B8
# 数据库用户名
spring.shardingsphere.datasource.ds1.username=root
# 数据库密码
spring.shardingsphere.datasource.ds1.password=root
# 数据库连接池的其它属性
#spring.shardingsphere.datasource.ds1.xxx=

# 由数据源名 + 表名组成，以小数点分隔。多个表以逗号分隔，支持 inline 表达式
#spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds1.t_order_1,ds1.t_order_2
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds1.t_order_${1..2}

# 行表达式分片策略
# 分片列名称
#spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.sharding-column= # ��Ƭ������
#spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.algorithm-expression= # ��Ƭ�㷨�б��ʽ������� groovy �﷨

spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
# 分片算法行表达式，需符合 groovy 语法
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_${order_id % 2 +1}

spring.shardingsphere.props.sql.show=true






